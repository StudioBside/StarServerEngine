<UserControl
    x:Class="CutEditor.Views.CutBoxes.BoxScreen"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:local="clr-namespace:CutEditor.Views.CutBoxes"
    mc:Ignorable="d" 
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    xmlns:lcvt="clr-namespace:CutEditor.Converters"
    xmlns:converters="clr-namespace:Du.Presentation.Converters;assembly=Du.Presentation"
    xmlns:nkm="clr-namespace:NKM;assembly=Shared.Templet"
    xmlns:extensions="clr-namespace:Du.Presentation.Extensions;assembly=Du.Presentation"
    xmlns:models="clr-namespace:CutEditor.Model;assembly=CutEditor.Model"
    d:DesignHeight="450" d:DesignWidth="800">

    <!--컨트롤 : 화면-->
    <Border Background="{StaticResource ScreenBoxBrush}"
             Visibility="{Binding ShowScreenSection, Converter={converters:BoolToVisibilityConverter}}">
        <StackPanel Orientation="Horizontal" Margin="5">

            <ui:DropDownButton Margin="0,0,10,0">
                <!--값이 없을 때는 한글 표기. 값이 있을때는 배경색을 다르게 표기-->
                <ui:DropDownButton.Style>
                    <Style TargetType="ui:DropDownButton" BasedOn="{StaticResource {x:Type ui:DropDownButton}}">
                        <Setter Property="Content" Value="{Binding Cut.FilterType}"/>
                        <Setter Property="Background" Value="{StaticResource HasValueBrush}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Cut.FilterType}" Value="{x:Static nkm:CutsceneFilterType.NONE}">
                                <Setter Property="Content" Value="필터 타입"/>
                                <Setter Property="Background" Value="White"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ui:DropDownButton.Style>
                <ui:DropDownButton.Flyout>
                    <ContextMenu ItemsSource="{Binding Source={extensions:EnumValues {x:Type nkm:CutsceneFilterType}}}">
                        <ContextMenu.ItemTemplate>
                            <DataTemplate>
                                <MenuItem Header="{Binding .}"
                                      Command="{Binding DataContext.SetFilterTypeCommand, RelativeSource={RelativeSource AncestorType=ListViewItem}}"
                                      CommandParameter="{Binding .}"/>
                            </DataTemplate>
                        </ContextMenu.ItemTemplate>
                    </ContextMenu>
                </ui:DropDownButton.Flyout>
            </ui:DropDownButton>

            <ui:DropDownButton Margin="0,0,10,0">
                <!--값이 없을 때는 한글 표기. 값이 있을때는 배경색을 다르게 표기-->
                <ui:DropDownButton.Style>
                    <Style TargetType="ui:DropDownButton" BasedOn="{StaticResource {x:Type ui:DropDownButton}}">
                        <Setter Property="Content" Value="{Binding Cut.TransitionEffect}"/>
                        <Setter Property="Background" Value="{StaticResource HasValueBrush}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Cut.TransitionEffect}" Value="{x:Null}">
                                <Setter Property="Content" Value="전환효과"/>
                                <Setter Property="Background" Value="White"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ui:DropDownButton.Style>
                <ui:DropDownButton.Flyout>
                    <ContextMenu ItemsSource="{Binding Source={extensions:EnumValues {x:Type nkm:TransitionEffect}}}">
                        <ContextMenu.ItemTemplate>
                            <DataTemplate>
                                <MenuItem Header="{Binding .}"
                                      Command="{Binding DataContext.SetTransitionEffectCommand, RelativeSource={RelativeSource AncestorType=ListViewItem}}"
                                      CommandParameter="{Binding .}"/>
                            </DataTemplate>
                        </ContextMenu.ItemTemplate>
                    </ContextMenu>
                </ui:DropDownButton.Flyout>
            </ui:DropDownButton>

            <ui:DropDownButton Margin="0,0,10,0">
                <!--값이 없을 때는 한글 표기. 값이 있을때는 배경색을 다르게 표기-->
                <ui:DropDownButton.Style>
                    <Style TargetType="ui:DropDownButton" BasedOn="{StaticResource {x:Type ui:DropDownButton}}">
                        <Setter Property="Content" Value="{Binding Cut.TransitionControl}"/>
                        <Setter Property="Background" Value="{StaticResource HasValueBrush}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Cut.TransitionControl}" Value="{x:Null}">
                                <Setter Property="Content" Value="전환방향"/>
                                <Setter Property="Background" Value="White"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ui:DropDownButton.Style>
                <ui:DropDownButton.Flyout>
                    <ContextMenu ItemsSource="{Binding Source={extensions:EnumValues {x:Type models:Enums+TransitionControl}}}">
                        <ContextMenu.ItemTemplate>
                            <DataTemplate>
                                <MenuItem Header="{Binding .}"
                                      Command="{Binding DataContext.SetTransitionControlCommand, RelativeSource={RelativeSource AncestorType=ListViewItem}}"
                                      CommandParameter="{Binding .}"/>
                            </DataTemplate>
                        </ContextMenu.ItemTemplate>
                    </ContextMenu>
                </ui:DropDownButton.Flyout>
            </ui:DropDownButton>

            <ui:Button Margin="0,0,10,0" Command="{Binding EditBgFadeCommand}"
                       ToolTip="{Binding Cut.BgFadeInOut}">
                <ui:Button.Style>
                    <Style TargetType="ui:Button" BasedOn="{StaticResource {x:Type ui:Button}}">
                        <Setter Property="Background" Value="{StaticResource HasValueBrush}"/>
                        <Setter Property="Content">
                            <Setter.Value>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock VerticalAlignment="Center" Margin="0,0,10,0"
                                               Text="{Binding Cut.BgFadeInOut.ButtonText}" />

                                    <!--fadeout일 때 색상 하나를 숨기기 위해서 대상 그룸을 하나로 묶어줌-->
                                    <StackPanel Orientation="Horizontal">
                                        <StackPanel.Style>
                                            <Style TargetType="StackPanel">
                                                <Setter Property="Visibility" Value="Visible"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Cut.BgFadeInOut.FadeType}" Value="FadeOut">
                                                        <Setter Property="Visibility" Value="Hidden"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </StackPanel.Style>

                                        <Rectangle Width="20" Height="20" Margin="0,0,10,0"
                                               Fill="{Binding Cut.BgFadeInOut.StartColor,
                                        Converter={converters:DrawingColorToBrushConverter}}"
                                               StrokeThickness="0.5" Stroke="Black" />
                                        <TextBlock VerticalAlignment="Center" Margin="0,0,10,0" Text="->" />
                                    </StackPanel>
                                    
                                    <Rectangle Width="20" Height="20"
                                               Fill="{Binding Cut.BgFadeInOut.EndColor,
                                        Converter={converters:DrawingColorToBrushConverter}}"
                                               StrokeThickness="0.5" Stroke="Black"/>
                                </StackPanel>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Cut.BgFadeInOut}" Value="{x:Null}">
                                <Setter Property="Background" Value="White"/>
                                <Setter Property="Content" Value="Fade 효과 설정" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ui:Button.Style>
            </ui:Button>

            <ui:Flyout Placement="Top"
                       VerticalAlignment="Top"
                       IsOpen="{Binding ScreenCrashFlyoutOpen, Mode=TwoWay}">
                <StackPanel Width="280">
                    <Border BorderThickness="0.6" BorderBrush="DarkGray"
                            CornerRadius="5" Padding="5" Margin="0,0,0,10">
                        <StackPanel Orientation="Horizontal" Margin="5,0">
                            <TextBlock Text="Flash : " VerticalAlignment="Center" Width="50"/>
                            <ui:NumberBox Width="50" SpinButtonPlacementMode="Hidden" ClearButtonEnabled="False"
                                          Text="{Binding Cut.BgFlashBang, UpdateSourceTrigger=PropertyChanged}">
                                <ui:NumberBox.InputBindings>
                                    <KeyBinding Key="Return" Command="{Binding CloseScreenCrashFlyoutCommand}"/>
                                </ui:NumberBox.InputBindings>
                            </ui:NumberBox>
                            <TextBlock Text=" Sec" VerticalAlignment="Center"/>
                        </StackPanel>
                    </Border>

                    <Border BorderThickness="0.6" BorderBrush="DarkGray"
                            CornerRadius="5" Padding="5" Margin="0,0,0,10">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <StackPanel Grid.Row="0" Grid.Column="0" Margin="5,0,0,5" Orientation="Horizontal">
                                <TextBlock Text="Crash : " VerticalAlignment="Center" Width="50"/>
                                <ui:NumberBox Width="50" SpinButtonPlacementMode="Hidden" ClearButtonEnabled="False"
                                          Text="{Binding Cut.BgCrashTime, UpdateSourceTrigger=PropertyChanged}">
                                    <ui:NumberBox.InputBindings>
                                        <KeyBinding Key="Return" Command="{Binding CloseScreenCrashFlyoutCommand}"/>
                                    </ui:NumberBox.InputBindings>
                                </ui:NumberBox>
                                <TextBlock Text=" Sec" VerticalAlignment="Center"/>
                            </StackPanel>

                            <StackPanel Grid.Row="0" Grid.Column="1" Margin="5,0,0,5" Orientation="Horizontal"
                                        HorizontalAlignment="Right">
                                <TextBlock Text="Pow : " VerticalAlignment="Center"
                                              HorizontalAlignment="Right" />
                                <ui:NumberBox Width="60" SpinButtonPlacementMode="Hidden" ClearButtonEnabled="False"
                                              HorizontalAlignment="Right"
                                              Text="{Binding Cut.BgCrash}">
                                    <ui:NumberBox.InputBindings>
                                        <KeyBinding Key="Return" Command="{Binding CloseScreenCrashFlyoutCommand}"/>
                                    </ui:NumberBox.InputBindings>
                                </ui:NumberBox>
                            </StackPanel>

                            <Slider Grid.Row="1" Grid.ColumnSpan="2"
                                    TickFrequency="0.05" IsSnapToTickEnabled="True"
                                    TickPlacement="BottomRight"
                                    Value="{Binding Cut.BgCrash}" Maximum="1"/>
                        </Grid>
                    </Border>

                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <ui:Button Appearance="Primary" Content="Ok"
                                   Command="{Binding CloseScreenCrashFlyoutCommand}"/>
                        <ui:Button Appearance="Caution" Content="Clear"
                                   Margin="10,0"
                                   Command="{Binding ClearScreenFlashCrashCommand}"/>
                    </StackPanel>
                </StackPanel>
            </ui:Flyout>

            <ui:Button Margin="0,0,10,0" Content="Crash/Flash"
                       Command="{Binding OpenScreenCrashFlyoutCommand}">
                <!--값이 있을때는 배경색을 다르게 표기-->
                <ui:Button.Style>
                    <Style TargetType="ui:Button" BasedOn="{StaticResource {x:Type ui:Button}}">
                        <Setter Property="Background" Value="{StaticResource HasValueBrush}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Cut.HasBgFlashCrashData}" Value="False">
                                <Setter Property="Background" Value="White"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ui:Button.Style>
            </ui:Button>

            <ui:Button Margin="0,0,10,0" Content="BG"
                       Command="{Binding PickBgFileNameCommand}"
                       ToolTip="{Binding Cut.BgFileName, Converter={converters:TruncateStringConverter}, ConverterParameter=30}">
                <!--값이 있을때는 배경색을 다르게 표기-->
                <ui:Button.Style>
                    <Style TargetType="ui:Button" BasedOn="{StaticResource {x:Type ui:Button}}">
                        <Setter Property="Background" Value="{StaticResource HasValueBrush}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Cut.BgFileName}" Value="{x:Null}">
                                <Setter Property="Background" Value="White"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ui:Button.Style>
            </ui:Button>

            <!--선택된 배경 파일 프리뷰-->
            <ContentPresenter Width="90"
                              VerticalAlignment="Center"
                              Margin="0,0,10,0"
                              Content="{Binding Cut.BgFileName, Converter={lcvt:BgFileToPreviewConverter}}"/>

            <!--BgChangeTime-->
            <StackPanel VerticalAlignment="Center" Margin="0,0,10,0"
                        Orientation="Horizontal"
                        Visibility="{Binding Cut.BgFileName, Converter={converters:NullToVisibilityConverter}}">
                <ui:TextBlock VerticalAlignment="Center" Text="전환시간 : "/>
                <ui:TextBox Width="50"
                            ClearButtonEnabled="False"
                            Text="{Binding Cut.BgChangeTime, UpdateSourceTrigger=PropertyChanged}"/>
            </StackPanel>

            <ui:Button Margin="0,0,10,0" Content="아크포인트"
                       ToolTip="{Binding Cut.Arcpoint.Name}"
                       Command="{Binding PickArcpointCommand}">
                <!--값이 있을때는 배경색을 다르게 표기-->
                <ui:Button.Style>
                    <Style TargetType="ui:Button" BasedOn="{StaticResource {x:Type ui:Button}}">
                        <Setter Property="Background" Value="{StaticResource HasValueBrush}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Cut.Arcpoint}" Value="{x:Null}">
                                <Setter Property="Background" Value="White"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ui:Button.Style>
            </ui:Button>

            <ui:Flyout Placement="Top"
                       VerticalAlignment="Top"
                       IsOpen="{Binding SlateFlyoutOpen, Mode=TwoWay}">
                <StackPanel Width="320">
                    <Border BorderThickness="0.5" BorderBrush="Gray" Padding="10" CornerRadius="5"
                            Margin="0,0,0,10">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="50"/>
                                <RowDefinition Height="50"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <TextBlock Grid.Row="0" Grid.Column="0" VerticalAlignment="Center"
                                       Margin="0,0,10,0"
                                       Text="ControlType :"/>
                            <ComboBox Grid.Row="0" Grid.Column="1"
                                      ItemsSource="{Binding Source={extensions:EnumValues {x:Type nkm:SlateControlType}}}"
                                      SelectedItem="{Binding Cut.SlateControlType, Mode=TwoWay}"/>

                            <TextBlock Grid.Row="1" Grid.Column="0" VerticalAlignment="Center"
                                       Text="Section No. :"/>
                            <ui:NumberBox Grid.Row="1" Grid.Column="1" Width="100"
                                          HorizontalAlignment="Left"
                                          SpinButtonPlacementMode="Hidden"
                                          ClearButtonEnabled="False"
                                          Text="{Binding Cut.SlateSectionNo, Mode=TwoWay}"/>
                        </Grid>
                    </Border>

                    <ui:Button HorizontalAlignment="Right"
                               Appearance="Caution" Content="Clear" 
                               Command="{Binding ClearSlateFlyoutCommand}"/>
                </StackPanel>
            </ui:Flyout>
            <ui:Button Margin="0,0,10,0"
                       Command="{Binding OpenSlateFlyoutCommand}">
                <!--값이 있을때는 배경색을 다르게 표기-->
                <ui:Button.Style>
                    <Style TargetType="ui:Button" BasedOn="{StaticResource {x:Type ui:Button}}">
                        <Setter Property="Background" Value="{StaticResource HasValueBrush}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Cut.HasSlateControlData}" Value="False">
                                <Setter Property="Background" Value="White"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ui:Button.Style>
                <TextBlock TextAlignment="Center">
                    <Run>Slate</Run>
                     <LineBreak/>
                    <Run>제어</Run>
                </TextBlock>
            </ui:Button>

            <ui:Button Margin="0,0,10,0">
                <TextBlock TextAlignment="Center">
                     <Run>BG</Run>
                     <LineBreak/>
                     <Run>제어</Run>
                </TextBlock>
            </ui:Button>

        </StackPanel>
    </Border>
    
</UserControl>

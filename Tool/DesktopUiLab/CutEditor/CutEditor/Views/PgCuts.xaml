<Page 
    x:Class="CutEditor.Views.PgCuts"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:local="clr-namespace:CutEditor.Views"
    xmlns:lcvt="clr-namespace:CutEditor.Converters"
    xmlns:lbh="clr-namespace:CutEditor.Behaviors"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    xmlns:behaviors="clr-namespace:Du.Presentation.Behaviors;assembly=Du.Presentation"
    xmlns:converters="clr-namespace:Du.Presentation.Converters;assembly=Du.Presentation"
    xmlns:extensions="clr-namespace:Du.Presentation.Extensions;assembly=Du.Presentation"
    xmlns:viewmodels="clr-namespace:CutEditor.ViewModel;assembly=CutEditor.ViewModel"
    d:DataContext="{d:DesignInstance Type=viewmodels:VmCuts}"
    mc:Ignorable="d" 
    d:DesignHeight="450" d:DesignWidth="800"
    SnapsToDevicePixels="True"
    UseLayoutRounding="True"
    Title="PgCutScene">
    <Page.InputBindings>
        <KeyBinding Key="Delete" Command="{Binding DeleteCommand}"/>
        <KeyBinding Key="G" Modifiers="Control" Command="{Binding ScrollByUidCommand}"/>
        <KeyBinding Key="Z" Modifiers="Control" Command="{Binding UndoCommand}"/>
        <KeyBinding Key="Y" Modifiers="Control" Command="{Binding RedoCommand}"/>
        <KeyBinding Key="S" Modifiers="Ctrl" Command="{Binding SaveCommand}"/>
        <KeyBinding Key="D1" Modifiers="Ctrl" Command="{Binding NewCutCommand}"
                    CommandParameter="{x:Static viewmodels:Enums+CutDataType.Normal}"/>
        <KeyBinding Key="D2" Modifiers="Ctrl" Command="{Binding NewCutCommand}"
                    CommandParameter="{x:Static viewmodels:Enums+CutDataType.Branch}"/>
        <KeyBinding Key="F" Modifiers="Ctrl" Command="{Binding FindFlyout.OpenCommand}"/>
        <KeyBinding Key="X" Modifiers="Ctrl" Command="{Binding CutPaster.CutCommand}"/>
        <KeyBinding Key="Esc" Command="{Binding CutPaster.ClearAllCommand}"/>
        <KeyBinding Key="C" Modifiers="Ctrl" Command="{Binding CutPaster.CopyCommand}"/>
    </Page.InputBindings>
    <b:Interaction.Behaviors>
        <behaviors:PageBehavior HandleKeyDown="True"/>
    </b:Interaction.Behaviors>
    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="CutTemplates/CutCommon.xaml"/>
                <ResourceDictionary Source="CutTemplates/CutTemplateNormal.xaml"/>
                <ResourceDictionary Source="CutTemplates/CutTemplateBranch.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <DataTemplate x:Key="SwitchableTemplet">
                <ContentControl Content="{Binding }">
                    <ContentControl.Style>
                        <Style TargetType="{x:Type ContentControl}">

                            <!-- Default Template -->
                            <Setter Property="ContentTemplate" Value="{StaticResource CutNormalTemplet}" />

                            <!-- Triggers to change Template -->
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding DataType}"
                                             Value="{x:Static viewmodels:Enums+CutDataType.Branch}">
                                    <Setter Property="ContentTemplate" Value="{StaticResource CutBranchTemplet}" />
                                </DataTrigger>
                            </Style.Triggers>

                        </Style>
                    </ContentControl.Style>
                </ContentControl>
            </DataTemplate>
        </ResourceDictionary>
    </Page.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!--상단 패널-->
        <DockPanel Grid.Row="0">

            <!--버튼 배열-->
            <StackPanel Orientation="Horizontal" Margin="5">
                <ui:Button Margin="3" Icon="{ui:SymbolIcon ArrowUndo16}"
                           Command="{Binding UndoCommand}"/>
                <ui:Button Margin="3" Icon="{ui:SymbolIcon ArrowRedo16}"
                           Command="{Binding RedoCommand}"/>

                <ui:SplitButton Margin="3" Content="새로운 컷"
                           Icon="{ui:SymbolIcon Add16}"
                           Command="{Binding NewCutCommand}"
                           CommandParameter="{x:Static viewmodels:Enums+CutDataType.Normal}">
                    <ui:SplitButton.Flyout>
                        <ContextMenu ItemsSource="{Binding Source={extensions:EnumValues {x:Type viewmodels:Enums+CutDataType}}}">
                            <ContextMenu.ItemTemplate>
                                <DataTemplate>
                                    <MenuItem Header="{Binding ., Converter={converters:EnumDescriptionConverter}}"
                                          Command="{Binding DataContext.NewCutCommand, RelativeSource={RelativeSource AncestorType=Page}}"
                                          CommandParameter="{Binding .}"/>
                                </DataTemplate>
                            </ContextMenu.ItemTemplate>
                        </ContextMenu>
                    </ui:SplitButton.Flyout>
                </ui:SplitButton>
                <ui:Button Margin="3" Content="선택 컷 삭제"
                           Icon="{ui:SymbolIcon Subtract16}"
                           Command="{Binding DeleteCommand}"/>

                <Border Margin="10,0" Padding="10,0" BorderBrush="{StaticResource ClopboardNotifyBrush}"
                        BorderThickness="1"
                        Visibility="{Binding CutPaster.HasAnyData, Converter={converters:BoolToVisibilityConverter}}">
                    <Grid>
                        <TextBlock VerticalAlignment="Center" Foreground="{StaticResource ClopboardNotifyBrush}"
                               Visibility="{Binding CutPaster.HasReserved, Converter={converters:BoolToVisibilityConverter}}">
                        잘라내기
                        <Run Text="{Binding CutPaster.Reserved.Count, Mode=OneWay}"/>
                        개 데이터
                        </TextBlock>
                        <TextBlock VerticalAlignment="Center" Foreground="{StaticResource ClopboardNotifyBrush}"
                               Visibility="{Binding CutPaster.PresetCount, Converter={converters:IntToVisibilityConverter}}">
                        복사하기
                        <Run Text="{Binding CutPaster.PresetCount, Mode=OneWay}"/>
                        개 데이터
                        </TextBlock>
                    </Grid>
                </Border>
            </StackPanel>

            <StackPanel DockPanel.Dock="Right" Orientation="Horizontal" Margin="5"
                        HorizontalAlignment="Right">

                <ui:Flyout Placement="Bottom"
                           VerticalAlignment="Bottom"
                           DataContext="{Binding FindFlyout}"
                           IsOpen="{Binding IsOpen, Mode=TwoWay}">
                    <ui:Flyout.InputBindings>
                        <KeyBinding Key="Esc" Command="{Binding CloseCommand}"/>
                    </ui:Flyout.InputBindings>
                    <StackPanel Width="300">
                        <ui:TextBox Margin="0,0,0,10" PlaceholderText="찾기"
                                    Text="{Binding FindText, UpdateSourceTrigger=PropertyChanged}">
                            <ui:TextBox.InputBindings>
                                <KeyBinding Key="Enter" Command="{Binding FindNextCommand}"/>
                                <KeyBinding Key="Enter" Modifiers="Shift" Command="{Binding FindPrevCommand}"/>
                                <KeyBinding Key="S" Modifiers="Alt" Command="{Binding ReplaceAllCommand}"/>
                            </ui:TextBox.InputBindings>
                            <b:Interaction.Behaviors>
                                <behaviors:TextBoxBehavior IsFocused="True" />
                            </b:Interaction.Behaviors>
                        </ui:TextBox>
                        <ui:TextBox Margin="0,0,0,10" PlaceholderText="바꾸기"
                                    Text="{Binding ReplaceText}"/>
                        <StackPanel Margin="0" Orientation="Horizontal" HorizontalAlignment="Right">
                            <ui:Button Margin="0,0,10,0" Content="이전"
                                       Command="{Binding FindPrevCommand}"/>
                            <ui:Button Margin="0,0,10,0" Content="다음"
                                       Command="{Binding FindNextCommand}"/>
                            <ui:Button Content="모두 바꾸기"
                                       Command="{Binding ReplaceAllCommand}"/>
                        </StackPanel>
                    </StackPanel>
                </ui:Flyout>
                <ui:Button Margin="3" Content="유닛 변환"
                           Command="{Binding ReplaceUnitCommand}"/>
                <ui:Button Margin="3" Content="Uid 지정 이동"
                           ToolTip="Ctrl + G"
                           Command="{Binding ScrollByUidCommand}"/>
                <ui:Button Margin="3" Content="찾기 / 바꾸기"
                           ToolTip="Ctrl + F"
                           Icon="{ui:SymbolIcon ArrowSwap20}"
                           Command="{Binding FindFlyout.OpenCommand}"/>
                <ui:Button Margin="3" Content="목록으로"
                           Icon="{ui:SymbolIcon ArrowStepBack16}"
                           Command="{Binding GoToCommand, Source={extensions:PageRouter}}"
                           CommandParameter="Views/PgHome.xaml"/>
                <ui:Button Margin="3" Content="읽기 모드"
                           Icon="{ui:SymbolIcon ArrowStepBack16}"
                           Command="{Binding GoToReadPageCommand}" />
                <ui:Button Margin="3" Content="파일 열기"
                           Icon="{ui:SymbolIcon Code16}"
                           Command="{Binding OpenFile, Source={extensions:UtilCommands}}"
                           CommandParameter="{Binding TextFileName}"/>
                <ui:Button Margin="3" Content="이름 복사"
                           Icon="{ui:SymbolIcon Copy16}"
                           Command="{Binding CopyToClipboard, Source={extensions:UtilCommands}}"
                           CommandParameter="{Binding Name}"/>
                <ui:Button Margin="3" Content="저장하기" Appearance="Primary"
                           ToolTip="Ctrl + S"
                           Icon="{ui:SymbolIcon Save16}"
                           Command="{Binding SaveCommand}"/>
            </StackPanel>
        </DockPanel>

        <!--구분선-->
        <Border BorderThickness="1" BorderBrush="Gray"/>

        <!--메인 영역 : 컷 리스트-->
        <ui:ListView Grid.Row="2" ItemsSource="{Binding Cuts}"
                     AllowDrop="True"
                     VirtualizingPanel.VirtualizationMode="Recycling"
                     ItemTemplate="{StaticResource SwitchableTemplet}"
                     SelectionMode="Extended"
                     extensions:ListViewExtensions.SelectedValues="{Binding SelectedCuts}">
            <ListView.ItemContainerStyle>
                <Style TargetType="ui:ListViewItem" BasedOn="{StaticResource {x:Type ui:ListViewItem}}">
                    <Setter Property="Margin" Value="0"/>
                </Style>
            </ListView.ItemContainerStyle>
            <b:Interaction.Behaviors>
                <!--<behaviors:ListViewBehavior ReorderByDragDrop="True"/>-->
                <lbh:CutsListController/>
            </b:Interaction.Behaviors>
            <ui:ListView.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="잘라내기 (Ctrl + X)"
                              Command="{Binding CutPaster.CutCommand}"/>
                    <MenuItem Header="복사하기 (Ctrl + C)"
                              Command="{Binding CutPaster.CopyCommand}"/>
                    <MenuItem Header="위로 붙여넣기"
                              Command="{Binding CutPaster.PasteToUpsideCommand}"/>
                    <MenuItem Header="아래에 붙여넣기"
                              Command="{Binding CutPaster.PasteToDownsideCommand}"/>
                    <Separator/>
                    <MenuItem Header="텍스트 일괄 수정" Command="{Binding BulkEditTextCommand}"/>
                    <MenuItem Header="캐릭터 일괄 수정" Command="{Binding BulkEditCharacterCommand}"/>
                    <MenuItem Header="UnitName 일괄 수정" Command="{Binding BulkEditUnitNameCommand}"/>
                    <Separator/>
                    <MenuItem Header="프리셋">
                        <MenuItem Header="새 프리셋으로 저장"/>
                        <MenuItem Header="위로 프리셋 붙이기..."/>
                        <MenuItem Header="아래로 프리셋 붙이기..."/>
                    </MenuItem>
                </ContextMenu>
            </ui:ListView.ContextMenu>
        </ui:ListView>
        
    </Grid>
</Page>
